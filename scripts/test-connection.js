const connectDB = require('../config/database');
const adminService = require('../services/adminService');
const subscriptionService = require('../services/subscriptionService');
const notificationService = require('../services/notificationService');
const clickService = require('../services/clickService');

async function testConnection() {
    try {
        console.log('üîÑ Testando conex√£o com MongoDB...');
        
        // Conecta ao banco
        await connectDB();
        console.log('‚úÖ Conex√£o com MongoDB estabelecida!');
        
        // Testa servi√ßos
        console.log('\nüîÑ Testando servi√ßos...');
        
        // Teste Admin Service
        console.log('- Testando AdminService...');
        await adminService.createDefaultAdmin();
        const admins = await adminService.findAll();
        console.log(`  ‚úÖ ${admins.length} admin(s) encontrado(s)`);
        
        // Teste Subscription Service
        console.log('- Testando SubscriptionService...');
        const activeSubscriptions = await subscriptionService.findAllActive();
        console.log(`  ‚úÖ ${activeSubscriptions.length} subscri√ß√£o(√µes) ativa(s) encontrada(s)`);
        
        // Teste Notification Service
        console.log('- Testando NotificationService...');
        const stats = await notificationService.getStats();
        console.log(`  ‚úÖ ${stats.total} notifica√ß√£o(√µes) no hist√≥rico`);
        
        // Teste Click Service
        console.log('- Testando ClickService...');
        const clickStats = await clickService.getGeneralStats();
        console.log(`  ‚úÖ ${clickStats.total} clique(s) registrado(s)`);
        
        console.log('\nüéâ Todos os testes passaram! O sistema est√° pronto para uso.');
        console.log('\nüìã Resumo:');
        console.log(`- Administradores: ${admins.length}`);
        console.log(`- Subscri√ß√µes ativas: ${activeSubscriptions.length}`);
        console.log(`- Notifica√ß√µes enviadas: ${stats.total}`);
        console.log(`- Cliques registrados: ${clickStats.total}`);
        
        process.exit(0);
        
    } catch (error) {
        console.error('‚ùå Erro durante o teste:', error);
        process.exit(1);
    }
}

testConnection();